{ns fhir.Patient-Track.read
 import #{sty}

 case
 {:zen/tags #{sty/case}
  :title "Patient read test case"
  :steps
  [{:desc "Clear all patients"
    :do {:act sty/http :method :post :url "/$sql"
         :body "TRUNCATE patient"}
    :match {:by sty/matcho :status 200}},
    

   
   {:id :create-patient
   	:desc  "Create a patient for test"
    :do {:act sty/http 
    	    :method :post 
    	    :url "/Patient"
         :body {:resourceType "Patient" 
                :name [{:text "John"}] 
                :birthDate "1980-10-10"
                :gender "male"
                }
           }
    :match {:by sty/matcho :status sty/ok?
    	       :body {:id sty/string?
    	       	      :meta {:lastUpdated sty/string?
                          :versionId sty/string?}}
                   }}


    {:id :read-patient
     :desc  "Read patient"
     :do {:act sty/http
          :method :get
          :url (str "/Patient/" (get-in sty/state [:create-patient :body :id]))}
     :match {:by sty/matcho
             :status sty/ok?
             :body {:id (get-in sty/state [:create-patient :body :id])
                    :resourceType "Patient"
                    :meta {:lastUpdated sty/string?
                           :versionId sty/string?}}}}


  ;;  {:id :read-patient-conditional-not-modified
  ;;  :desc  "Checking if the version of just created read resource has not changed"
  ;;  :do {:act sty/http
  ;;       :method :get
  ;;       :url (str "/Patient/" (get-in sty/state [:create-patient :body :id]))
  ;;       :body {:headers {:If-None-Match (get-in sty/state [:create-patient :body :meta :versionId])}}
  ;;      }
  ;;  :match {:by sty/matcho
  ;;          :status 304
  ;;           }}


    {:id :read-patient-not-found
     :desc  "Try to read not existing patient"
     :do {:act sty/http
          :method :get
          :url (str "/Patient/pt-3")}
     :match {:by sty/matcho
             :status 404
             }}


     {:desc  "Delete created patient"
   	  :do {:act sty/http :method :delete
           :url (str "/Patient/" (get-in sty/state [:create-patient :body :id]))
          }
      :match {:by sty/matcho 
      	       :status sty/ok? 
              }}


     {:desc  "Try to read just deleted  patient"
      :do {:act sty/http :method :get
           :url (str "/Patient/" (get-in sty/state [:create-patient :body :id]))
          }
      :match {:by sty/matcho 
      	       :status 410 
    	         }}

]}}



