{ns fhir.Patient-Track.update
 import #{sty}

 case
 {:zen/tags #{sty/case}
  :title "Patient update test case"
  :steps
  [{:id :clear-patients
  	 :desc "Clear all patients"
    :do {:act sty/http :method :post :url "/$sql"
         :body "TRUNCATE patient"}
    :match {:by sty/matcho :status 200}},
    

   
   {:id :create-patient
   	:desc  "Create a patient for test"
    :do {:act sty/http 
    	    :method :post 
    	    :url "/Patient"
         :body {:resourceType "Patient" 
                :name [{:text "John"}] 
                :birthDate "1980-10-10"
                :gender "male"
                }
           }
    :match {:by sty/matcho :status sty/ok?
    	       :body {:resourceType "Patient" 
    	       	      :id sty/string?
    	       	      :meta {:lastUpdated sty/string?
                          :versionId sty/string?}}
                   }}


   {:id :read-patient
    :desc  "Read patient"
    :do {:act sty/http
         :method :get
         :url (str "/Patient/" (get-in sty/state [:create-patient :body :id]))}
    :match {:by sty/matcho
            :status sty/ok?
            :body {:id (get-in sty/state [:create-patient :body :id])
                   :resourceType "Patient"
                   :meta {:lastUpdated sty/string?
                          :versionId sty/string?}}}}


   {:id :update-patient
    :desc  "Update previously created patient"
    :do {:act sty/http :method :put
         :url "/Patient?name=John"
         :body {
                :name [{:text "Johnny"}]
                :birthDate "1970-10-10"
                :gender "male"}}
    :match {:by sty/matcho :status sty/ok?
    	       :body {:id (get-in sty/state [:create-patient :body :id]) :birthDate "1970-10-10"}}}


   {:id :update-as-create
    :desc  "Update as create"
    :do {:act sty/http :method :put
         :url "/Patient"
         :body {
                :name [{:text "Denny"}]
                :birthDate "2015-10-10"
                :gender "female"}}
    :match {:by sty/matcho :status sty/ok?
    	        :body {:resourceType "Patient"}}}


   {:id :update-non-successful
    :desc  "Versioned update"
    :do {:act sty/http :method :put
         :url (str "/Patient/" (get-in sty/state [:create-patient :body :id]))
         :headers {:If-Match (get-in sty/state [:update-patient :body :meta :versionId])}
         :body {
                :name [{:text "no-John"}]}}
    :match {:by sty/matcho :status sty/ok?
    	       }}

    ]}}
